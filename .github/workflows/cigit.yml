name: CI

on:
  push:
    branches:
      - hw1

env:
  BUILD_TYPE: Debug

jobs:
  cppcheck:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install cppcheck
        uses: deep5050/cppcheck-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          
      - name: Publish report    
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: 'hw1'

  clang-format:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Clang-format
      uses: DoozyX/clang-format-lint-action@v0.14
      with:
        source: './src ./App/include ./App/src'
        exclude: './tests'
        extensions: 'hpp,cpp'
        clangFormatVersion: 14
        style: 'file:config/.clang-format'

  clang-tidy:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.13

    - name: Build
      run: |
        cmake -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=True
        cmake --build build

    - uses: ZedThree/clang-tidy-review@v0.12.0
      id: review

    - uses: ZedThree/clang-tidy-review/upload@v0.12.0
      id: upload-review

  cpplint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install python
      uses: actions/setup-python@v1

    - name: Install cpplint
      run: pip install cpplint

    - name: Run cpplint
      run: cpplint.py --filter=-build/include_subdir --filter=-runtime/int --root=./ ./src ./App/src ./App/include ./tests
  test:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.13
    - name: Build
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Debug
        cmake --build build
    - name: Run tests
      run: |
        ctest --output-on-failure --repeat-until-fail 100 --test-dir ./build/tests/
        sudo apt-get update -y           
        sudo apt-get install -y gcovr
        gcovr -e '.*googletest*' -x >> cover.xml